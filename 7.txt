package com.example.prog7;

import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.SimpleAdapter;

import androidx.appcompat.app.AppCompatActivity;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;

public class MainActivity extends AppCompatActivity {
    private Button fetchButton;
    private ListView listView;
    private ArrayList<HashMap<String, String>> contactList;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        fetchButton = findViewById(R.id.btnFetch);
        listView = findViewById(R.id.listView);
        contactList = new ArrayList<>();

        fetchButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                new FetchContactsTask().execute();
            }
        });
    }

    private class FetchContactsTask extends AsyncTask<Void, Void, String> {
        @Override
        protected String doInBackground(Void... params) {
            String json_response = null;
            try {
                URL url = new URL("https://raw.githubusercontent.com/wellingtoncosta/fake-contacts-api/master/db.json");
                HttpURLConnection connection = (HttpURLConnection) url.openConnection();
                connection.setRequestMethod("GET");
                connection.connect();

                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
                StringBuilder sb = new StringBuilder();
                String line;
                while ((line = reader.readLine()) != null) {
                    sb.append(line).append('\n');
                }
                json_response = sb.toString();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return json_response;
        }

        @Override
        protected void onPostExecute(String json_response) {
            if (json_response != null) {
                try {
                    JSONObject jsonObj = new JSONObject(json_response);
                    JSONArray contacts = jsonObj.getJSONArray("contacts");

                    for (int i = 0; i < contacts.length(); i++) {
                        JSONObject c = contacts.getJSONObject(i);
                        String id = c.getString("id");
                        String name = c.getString("name");
                        String email = c.getString("email");

                        HashMap<String, String> contact = new HashMap<>();
                        contact.put("id", id);
                        contact.put("name", name);
                        contact.put("email", email);

                        contactList.add(contact);
                    }

                    ListAdapter adapter = new SimpleAdapter(MainActivity.this, contactList,
                            R.layout.list_item, new String[]{"id", "name", "email"},
                            new int[]{R.id.cid, R.id.cname, R.id.cemail});
                    listView.setAdapter(adapter);
                } catch (JSONException e) {
                    Log.e("error", "Json parsing error: " + e.getMessage());
                }
            } else {
                Log.e("error", "Couldn't get JSON from the server.");
            }
        }
    }
}